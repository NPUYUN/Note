# Numpy 切片与索引
import numpy as np

"""
Numpy 可以和Python中的list一样进行切片和索引操作。

索引操作：
1. 整数索引：
通过整数索引，可以直接访问某个元素。如a[0]
对于多维数组，可以用逗号分隔索引，如a[0 , 0]

2. 整数数组索引：
通过整数数组索引，可以访问多个元素。如a[[0, 2, 3]]
对于多维数组，同样可以用逗号隔开，具有一一对应的关系，若a[[0 , 2], [1 , 1]]] 表示取(0 , 1)和(2 , 1)处的数据，注意返回一维数组

3. 布尔索引
通过布尔数组索引，可以访问满足条件的元素。如a[a > 0]，返回所有大于0的元素。
tips：取反(~)可以过滤掉Nan值。

4. 传入多个索引数组：np.ix_()
np.ix_()函数就是输入两个数组，产生笛卡尔积的映射关系，返回多维数组。

5. 传入多个布尔索引：
(1) ()&() (同理也有()|())
(2) np.logical_and() (同理也有np.logical_or())
(3) np.all() (同理也有np.any())

布尔索引可以针对某一列的数据，进而提取需要的数组
"""

a = np.array([1 , 2,  3, 4 , 5])
b = np.array([[1 , 2 , 3] , [4 , 5 , 6] , [7 , 8 , 9]])
# 实例1：整数索引
print(a[0])
print(b[0, 0])

# 实例2：整数数组索引
print(a[[0 , 2 , 4]])
print(b[[0 , 1], [1 , 2]]) # 输出一维数组

# 实例3：布尔索引
print(a[a > 3])
print(b[b > 3])

# 实例4：传入多个索引数组
print(b[np.ix_([0, 1], [1, 2])]) # 输出二维数组，分别为(0 , 1)，(1 , 2), (1 , 1) , (1 , 2)四个元素
print(b[np.ix_([0 , 1, 0 , 2], [1 , 2, 0, 2])])

# 实例5：传入多个布尔索引
print(a[(a > 2) & (a < 5)])
print(a[(a < 2) | (a > 5)])
print(a[np.logical_and(a > 2, a < 5)])
print(a[np.logical_or(a < 2, a > 5)])
print(a[np.all([a > 2 , a < 5] , axis=0)]) # axis=0表示按列/按元素逐个对应
print(a[np.any([a < 2 , a > 5] , axis=0)])

print(b[b[...,1] > 2]) # 取出b中第二行全都大于2的元素
"""
切片操作：

1. 获取切片对象：slice(start, stop, step)
- start：起始索引，默认为0
- stop：结束索引，默认为数组长度
- step：步长，默认为1

2. 切片操作：array[start:stop:step]
- start：起始索引，默认为0
- stop：结束索引，默认为数组长度
- step：步长，默认为1
注意：
当没有:时，a[x]表示返回该索引的单个元素
当有一个:和一个整数时，a[x:]表示返回从该索引开始以后的所有元素；a[:x]表示返回从数组开头到该索引的所有元素
当有一个:和两个整数时，a[x:y]表示返回从该索引开始到该索引结束的所有元素(不包括停止索引)，步长为1
当有两个:和一个整数时，a[::z]表示返回从数组开头到数组末尾的所有元素，步长为z
当步长为负数时，表示逆序切片。如a[::-1]表示返回整个数组的逆序。

3. 多维数组切片(以二维数组为例)：array[row_start:row_stop:row_step, col_start:col_stop:col_step]
获取的元素为行和列获取元素的交集，默认为全获取，如a[1:3]表示获取第二行到第三行的所有元素。
每一维还可以只写省略号或者冒号，表示全获取。

"""

a = np.arange(10)
b = np.arange(10).reshape(2, 5)

# 实例1：获取切片对象
s = slice(1 ,10 ,3)
print(a[s])

# 实例2：一维数组切片
print(a[1:])
print(a[:5])
print(a[::2])
# 逆序切片
print(a[::-1])

# 实例3：二维数组切片
print(b[1:])
print(b[1:3 , 0:2])
print(b[::2 , ::2])
print(b[..., 1:])
print(b[:,1:])